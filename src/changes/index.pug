extends /components/layout

block head
  +head("Project+ Website")

block content
  +header("changes")

  include data

  section.section
    .container
      h1.title Changes in Project+ v1.05b
      p.bold Automatically parsed from the Google Document, errors still possible.
      
      - const replaceAll = (str, find, replace) => str.replace(new RegExp(find.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"), "g"), replace)

      each char in data
        - const trimmed = replaceAll(char.title, ":", "")
        - const link = replaceAll(trimmed, " ", "-")

        h2.title.is-4(
          style="margin-top: 3rem"
        )
          a(style="margin-right: 0.5rem; font-family: Arial; user-select: none" onclick=`toggleFold(this, "${link}")`) ►
          a(style="text-decoration: underline" id=link href="#" + link)= trimmed

        .content(data-fold=link style="display: none")
          ul
            each attr in char.attributes
              li= attr

          ul
            each move in char.moves
              li.bold(class=move.title.type)
                - const sublink = link + ">" + replaceAll(move.title.text, " ", "-")
                a(
                  id=sublink href="#" + sublink
                  style="color: #49cbff; text-decoration: underline"
                )=move.title.text
              ul
                each change in move.changes
                  if change.changes
                    // further nesting?
                    - const classes = change.title.type === "none" ? "bold" : change.title.type
                    li(class=classes)= change.title.text
                    ul
                      each subchange in change.changes
                        li(class=subchange.type)= subchange.text
                  else 
                    // no further nesting
                    li(class=change.type)= change.text
    script.
      const toggleFold = (source, target) => {
        const targetEl = document.querySelector(`[data-fold="${target}"]`)

        const isFolded = targetEl.style.getPropertyValue("display") === "none"

        if (isFolded) {
          targetEl.style.setProperty("display", "")
          source ? source.innerHTML = "▼" : null
        } else {
          targetEl.style.setProperty("display", "none")
          source ? source.innerHTML = "►" : null
        }
      }

      if (window.location.hash) {
        const path = decodeURI(window.location.hash).substr(1).split(">")
        toggleFold(null, path[0])
      }