extends /components/layout

block head
  +head("Project+ Website")

block content
  +header("changes")

  include data

  style.
    a.fa-link {
      margin-left: 0.5rem;
      font-size: 1.2rem;
      visibility: hidden;
    }

    li > a.fa-link {font-size: 0.9rem}

    h2 {
      user-select: none;
    }

    li:hover > a.fa-link,
    h2:hover > a.fa-link {
      visibility: visible;
    }


  section.section
    .container
      h1.title Changes in Project+ v1.05b
      p.bold Automatically parsed from the Google Document, errors still possible.
      
      - const replaceAll = (str, find, replace) => str.replace(new RegExp(find.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"), "g"), replace)

      each character in characters
        - const characterLink = replaceAll(character.name, " ", "-")

        h2.title.is-4(
          style="margin-top: 3rem"
        )
          a(onclick=`toggleFold(this, "${characterLink}")`)
            span(style="margin-right: 0.5rem; user-select: none; font-family: Arial") ►
            span(id=characterLink)= character.name
          a(data-clipboard-text=characterLink).fa.fa-link

        .content(data-fold=characterLink style="display: none")
          ul
            each change in character.changes
              li(class=change.type || null)= change.text

          ul
            each move in character.moves
              li.bold(class=move.type || null)
                - const sublink = characterLink + ">" + replaceAll(move.title, " ", "-")
                span(id=sublink)=move.title
                a(data-clipboard-text=sublink).fa.fa-link
              ul
                each change in move.changes
                  if change.text
                    li(class=change.type || null)= change.text
                  else
                    li(class=change.type || null)= change.title
                    ul
                      each sub in change.sub
                        if sub.text
                          li(class=sub.type || null)= sub.text
                        else
                          li(class=sub.type || null)= sub.title
                          ul
                            each final in sub.final
                              li(class=final.type || null)= final.text


                //-
                  if change.changes
                    // further nesting?
                    - const classes = change.title.type === "none" ? "bold" : change.title.type
                    li(class=classes)= change.title.text
                    ul
                      each subchange in change.changes
                        li(class=subchange.type)= subchange.text
                  else 
                    // no further nesting
                    li(class=change.type)= change.text
    script(src="/js/clipboard.min.js")
    script(src="https://kit.fontawesome.com/acf25e660e.js")
    script.
      new ClipboardJS("a.fa-link", {
        text: el => window.location.origin + window.location.pathname + "#" + el.dataset.clipboardText
      })

      const toggleFold = (source, target) => {
        const targetEl = document.querySelector(`[data-fold="${target}"]`)

        const isFolded = targetEl.style.getPropertyValue("display") === "none"

        if (isFolded) {
          targetEl.style.setProperty("display", "")
          if (source) source.firstElementChild ? source.firstElementChild.innerHTML = "▼" : null
        } else {
          targetEl.style.setProperty("display", "none")
          if (source) source.firstElementChild ? source.firstElementChild.innerHTML = "►" : null
        }
      }

      if (window.location.hash) {
        const path = decodeURI(window.location.hash).substr(1).split(">")
        toggleFold(null, path[0])
      }