extends /components/layout

block head
  +head("Project+ Website")

block content
  +header("bugfixchanges")

  include data

  style.
    a.fa-link {
      margin-left: 0.5rem;
      font-size: 1.2rem;
      visibility: hidden;
    }

    li > a.fa-link {font-size: 0.9rem}

    h2 {
      user-select: none;
    }

    li:hover > a.fa-link,
    h2:hover > a.fa-link {
      visibility: visible;
    }

    .char-icon {
      margin-right: 7px;
    }

    .char-icon > img {
      height: 40px;
      position: relative;
      top: 10px;
    }

  section.section
    .container.maincard
      h1.title Changes in Project+ v2.1
      p.bold Automatically parsed from the Google Document, errors still possible.
      br
      .group
        a.button.is-link(href="https://docs.google.com/document/d/1Lo2t1zvk897dK8eWWEx1ImNoZjICW5G7hK_9clqyjlQ") Google Doc Version
        a.button.is-link(href="https://docs.google.com/spreadsheets/d/1QdTijaayiheKvIcvZSdHGae3v_OQXlJXx7T2C1pdvck") Music Lineup




      // ---------------------------

      - const replaceAll = (str, find, replace) => str.replace(new RegExp(find.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1"), "g"), replace)

      each character in characters
        - const characterLink = replaceAll(character.name, " ", "-")

        h2.title.is-4(style="margin-top: 1.2rem")
          span.char-icon
            if !["Costumes & Aesthetics", "Misc", "Stages"].includes(character.name)
              img(src=`/img/chars/${characterLink}.png`)
            else
              -
                let pointIcon = "smash"
                switch(character.name) {
                  case "Costumes & Aesthetics": pointIcon = "stickers"; break
                  case "Stages": pointIcon = "stages"; break
                  default: pointIcon = "smash"
                }
              img(src=`/img/icons/${pointIcon}.png`)
          a(onclick=`toggleFold(this, "${characterLink}")`)
            span(style="margin-right: 0.5rem; user-select: none; font-family: Arial") ►
            span(id=characterLink)= character.name
          a(data-clipboard-text=characterLink title="Copy link to clipboard").fa.fa-link

        .content(data-fold=characterLink style="display: none")
          ul
            each change in character.moves
              each change2 in change
                if typeof change2 !== "string"
                  li.bold
                    - const sublink = characterLink + "#" + replaceAll(change2.title, " ", "-")
                    span=change2.title
                    a(data-clipboard-text=sublink title="Copy link to clipboard").fa.fa-link
                  ul
                    each change3 in change2.changes
                      if typeof change3 !== "string"
                        li= change3.title
                        ul
                          each change4 in change3.changes
                            if typeof change4 !== "string"
                              li= JSON.stringify(change4)
                            else
                              li= change4
                      else
                        li= change3
                else
                  li= change2

      // ---------------------------

    script(src="/js/clipboard.min.js")
    script(src="https://kit.fontawesome.com/acf25e660e.js")
    script.
      new ClipboardJS("a.fa-link", {
        text: el => encodeURI(window.location.origin + window.location.pathname + "#" + el.dataset.clipboardText)
      })

      const toggleFold = (source, target) => {
        const targetEl = document.querySelector(`[data-fold="${target}"]`)

        const isFolded = targetEl.style.getPropertyValue("display") === "none"

        if (isFolded) {
          targetEl.style.setProperty("display", "")
          if (source) source.firstElementChild ? source.firstElementChild.innerHTML = "▼" : null
        } else {
          targetEl.style.setProperty("display", "none")
          if (source) source.firstElementChild ? source.firstElementChild.innerHTML = "►" : null
        }
      }

      if (window.location.hash) {
        const path = decodeURI(window.location.hash).substr(1).split("#")
        toggleFold(null, path[0])
      }